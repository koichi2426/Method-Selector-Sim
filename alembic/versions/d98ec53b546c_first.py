"""first

Revision ID: d98ec53b546c
Revises: 
Create Date: 2025-07-25 17:42:21.587250

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'd98ec53b546c'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('datasets',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('type', sa.String(length=50), nullable=True),
    sa.Column('triplet_ids', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('scenarios',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('state', sa.Text(), nullable=False),
    sa.Column('method_group', sa.Text(), nullable=False),
    sa.Column('target_method', sa.Text(), nullable=False),
    sa.Column('negative_method_group', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('trained_models',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('dataset_id', sa.String(length=36), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('file_path', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['dataset_id'], ['datasets.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('training_ready_scenarios',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('scenario_id', sa.String(length=36), nullable=False),
    sa.Column('state', sa.Text(), nullable=False),
    sa.Column('method_group', sa.Text(), nullable=False),
    sa.Column('negative_method_group', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['scenario_id'], ['scenarios.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('model_evaluation_sessions',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('trained_model_id', sa.String(length=36), nullable=False),
    sa.Column('dataset_id', sa.String(length=36), nullable=False),
    sa.Column('summary_metrics', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['dataset_id'], ['datasets.id'], ),
    sa.ForeignKeyConstraint(['trained_model_id'], ['trained_models.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('triplets',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('training_ready_scenario_id', sa.String(length=36), nullable=False),
    sa.Column('anchor', sa.Text(), nullable=False),
    sa.Column('positive', sa.Text(), nullable=False),
    sa.Column('negative', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['training_ready_scenario_id'], ['training_ready_scenarios.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('individual_evaluation_results',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('model_evaluation_session_id', sa.String(length=36), nullable=False),
    sa.Column('test_data_id', sa.String(length=36), nullable=False),
    sa.Column('inference_time_ms', sa.Float(), nullable=True),
    sa.Column('power_consumption_mw', sa.Float(), nullable=True),
    sa.Column('llm_judge_score', sa.Float(), nullable=True),
    sa.Column('llm_judge_reasoning', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['model_evaluation_session_id'], ['model_evaluation_sessions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('individual_evaluation_results')
    op.drop_table('triplets')
    op.drop_table('model_evaluation_sessions')
    op.drop_table('training_ready_scenarios')
    op.drop_table('trained_models')
    op.drop_table('scenarios')
    op.drop_table('datasets')
    # ### end Alembic commands ###
